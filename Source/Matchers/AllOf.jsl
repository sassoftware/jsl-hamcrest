// Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

Names Default To Here( 0 );

/*
	Class: UtAllOfMatcher
		---Prototype---
		class UtAllOfMatcher inherits UtMatcher
		---------------
		
		Matches if and only if all of the given matchers are satisfied.
*/
Define Class(
	"UtAllOfMatcher",
	Base Class( UtMatcher ),
	matchers = {};
	_init_ = Method( {matchers},
		this:matchers = matchers;
	);
	matches = Method( {test expr},
		
		for( i = 1, i <= N Items(this:matchers), i++,
			matchInfo = this:matchers[i] << matches( Name Expr( test expr ) );
			
			If( !matchInfo:success,
				mismatch = (this:matchers[i] << Describe()) || " " || matchInfo:mismatch;
				lre = matchInfo:lre;
				Return( ::ut match info failure( mismatch, lre ) );
			);
		);
		::ut match info success();
	);
	describe = Method( {},
		"(" || Concat Items( this:matchers << describe(), " and " ) || ")"
	);
);

// Section: Globals

/* 
	Function: ut all of
		---Prototype---
		ut all of( List<UtMatcher> matchers )
		---------------
		Matches the test expression with every matcher given in the list.
		
		Factory function for <UtAllOfMatcher>.

	Arguments:
		matchers - a list of any objects

	Example:
		> ut assert that( Expr( 5 + 5 ), ut all of( { ut equal to( 10 ), ut no throw() } ) );
		
	Note:
		This matcher will give the test expression (unevaluated) to each matcher in the given list.
*/
ut matcher factory( "ut all of" );
ut all of = Function( {matchers},
	New Object( UtAllOfMatcher( ut ensure matcher list( matchers ) ) );
);
