// Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

Names Default To Here( 0 );

/*
	Class: UtCaseMatcher
		---Prototype---
		class UtCaseMatcher inherits UtMatcher
		---------------
		
		Operates only on matchers. 
*/
Define Class(
	"UtCaseMatcher",
	Base Class( UtMatcher ),
	inner = Empty();
	transform function = Empty();
	transform description = "";
	_init_ = Method( {inner,transform function, transform description},
		this:inner = inner;
		this:transform function = Parse( transform function );
		this:transform description = transform description;
	);
	matches = Method( {test expr},
		actual = test expr;
		this:inner:matches( this:transform function( Name Expr( actual ) ) );
	);
	describe = Method( {},
		"as " || this:transform description || " " || inner:describe();
	);
);

// Section: Globals

/* 
	Function: ut as lowercase
		---Prototype---
		ut as lowercase( UtMatcher matcher )
		---------------
		Converts actual value to lowercase before passing it to an 
		inner matcher (or equal to if one is not provided).
 
		Factory function for <UtCaseMatcher>.

	Arguments:
		matcher - any object

	Examples:
		> ut assert that( Expr( "Test" || "string" ), ut as lowercase( "teststring" ) );
*/
ut matcher factory( "ut as lowercase" );
ut as lowercase = Function( {matcher},
	New Object( UtCaseMatcher( ut ensure matcher( Name Expr( matcher ) ), "Lowercase", "lowercase" ) )
);

/* 
	Function: ut as uppercase
		--Prototype---
		ut as uppercase( UtMatcher matcher )
		--------------
		Converts actual value to uppercase before passing it to an 
		inner matcher (or equal to if one is not provided).
 
		Factory function for <UtCaseMatcher>.

	Arguments:
		matcher - any object

	Examples:
		> ut assert that( Expr( "Test" || "string" ), ut as uppercase( "TESTSTRING" ) );
*/
ut matcher factory( "ut as uppercase" );
ut as uppercase = Function( {matcher},
	New Object( UtCaseMatcher( ut ensure matcher( Name Expr( matcher ) ), "Uppercase", "uppercase" ) )
);
