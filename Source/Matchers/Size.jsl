// Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

Names Default To Here( 0 );

/*
	Class: UtSizeMatcher
		---Prototype---
		class UtSizeMatcher inherits UtMatcher
		---------------
		Operates only on matchers.
*/
Define Class(
	"UtSizeMatcher",
	Base Class( UtMatcher ),
	inner = Empty();
	transform function = Empty();
	transform description = "";
	_init_ = Method( {inner, transform function, transform description},
		this:inner = inner;
		this:transform function = Parse( transform function );
		this:transform description = transform description;
	);
	matches = Method( {test expr},
		actual = test expr;
		match info = this:inner:matches( this:transform function( Name Expr( actual ) ) );
		If( !match info:success,
			match info:mismatch = Eval Insert( "^Char( Name Expr( this:transform function ) )^( ^ut get show string( Name Expr( actual ) )^ ) ^match info:mismatch^" );
		);
		match info;
	);
	describe = Method( {},
		this:transform description || " " || inner:describe();
	);
);


// Section: Globals

/* 
	Function: ut length
		---Prototype---
		ut length( UtMatcher matcher )
		---------------
		Passes the Length() of the actual value to the inner matcher.
 
		Factory function for <UtSizeMatcher>.

	Arguments:
		matcher - any object

	Examples:
		> ut assert that( Expr( {1,2,3} ), ut length( 3 ) );
		> ut assert that( Expr( "str" || "ing" ), ut length( 6 ) );
*/
ut matcher factory( "ut length" );
ut length = Function( {matcher},
	New Object( UtSizeMatcher( ut ensure matcher( Name Expr( matcher ) ), "Length", "length" ) )
);

/* 
	Function: ut n items
		---Prototype---
		ut n items( UtMatcher matcher )
		---------------
		Passes the N Items() of the actual value to the inner matcher.
 
		Factory function for <UtSizeMatcher>.

	Arguments:
		matcher - any object

	Examples:
		> ut assert that( Expr( {1,2,3} ), ut n items( 3 ) );
*/
ut matcher factory( "ut n items" );
ut n items = Function( {matcher},
	New Object( UtSizeMatcher( ut ensure matcher( Name Expr( matcher ) ), "N Items", "n items" ) )
);

/* 
	Function: ut n cols
		---Prototype---
		ut n cols( UtMatcher matcher )
		---------------
		Passes the N Cols() of the actual value to the inner matcher.
 
		Factory function for <UtSizeMatcher>.

	Arguments:
		matcher - any object

	Examples:
		> ut assert that( Expr( dt ), ut n cols( 3 ) );
		> ut assert that( Expr( Transpose( 1::3 ) ), ut n cols( 1 ) );
*/
ut matcher factory( "ut n cols" );
ut n cols = Function( {matcher},
	New Object( UtSizeMatcher( ut ensure matcher( Name Expr( matcher ) ), "N Cols", "n cols" ) )
);

/* 
	Function: ut n rows
		---Prototype---
		ut n rows( UtMatcher matcher )
		---------------
		Passes the N Rows() of the actual value to the inner matcher.
 
		Factory function for <UtSizeMatcher>.

	Arguments:
		matcher - any object

	Examples:
		> ut assert that( Expr( dt ), ut n rows( 3 ) );
		> ut assert that( Expr( Transpose( 1::3 ) ), ut n rows( 3 ) );
*/
ut matcher factory( "ut n rows" );
ut n rows = Function( {matcher},
	New Object( UtSizeMatcher( ut ensure matcher( Name Expr( matcher ) ), "N Rows", "n rows" ) )
);
