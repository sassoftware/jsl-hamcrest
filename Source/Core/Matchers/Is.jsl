// Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

Names Default To Here( 0 );

/*
	Class: UtIsMatcher
		---Prototype---
		class UtIsMatcher inherits UtMatcher
		---------------
		
		A NoOp forwarding matcher. Just exists to make assertions read
		more naturally.
*/
Define Class(
	"UtIsMatcher",
	Base Class( UtMatcher ),
	inner = Empty();
	_init_ = Method( {inner},
		this:inner = inner
	);
	matches = Method( {test expr},
		this:inner:matches( Name Expr( test expr ) )
	);
	describe = Method( {},
		this:inner:describe()
	);
);

// Section: Globals

/*
	Function: ut is
		---Prototype---
		ut is()
		---------------
		A forwarding matcher to help when an "is" would help the assertion read more naturally.
		
		Factory function for <UtIsMatcher>.

	Arguments:
		matcher - any object

	Examples:

		> ut assert that( Expr( 5 + 5 ), ut is( ut equal to( 10 ) ) );
*/
ut matcher factory( "ut is" );
ut is = Function( {matcher},
	New Object( UtIsMatcher( ut ensure matcher( Name Expr( matcher ) ) ) )
);